name: 'Execute tests'
description: 'Execute tests on python'
inputs:
  doppler-token-tests:
    description: 'Doppler token for tests'
    required: true
  python-version:
    description: 'Python version'
    required: true
  org-github-token:
    description: 'git token'
    required: true
  pypi-user:
    description: 'PyPi user'
    required: true
  pypi-password:
    description: 'PyPi password'
    required: true
  all_extras:
    description: 'Install All Extras'
    required: false
    default: 'false'
  sonar-version:
    description: 'Sonar version'
    required: true
  sonar-token:
    description: 'Sonar token'
    required: true
  sonar-url:
    description: 'Sonar URl'
    required: true
  strict:
    description: 'Strict mode'
    required: false
    default: 'true'
  project-version:
    description: 'Version of project'
    required: false
    default: 'latest'
  clean-run:
    description: 'Run with tests'
    type: boolean
    required: false
    default: false
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      if: |
        inputs.clean-run == false
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: Install host dependencies
      if: |
        inputs.clean-run == false
      shell: bash
      run: sudo apt update && sudo apt-get install -y locales locales-all libcurl4-openssl-dev libssl-dev
    - name: Cache pip
      if: |
        inputs.clean-run == false
      uses: actions/cache@v3
      with:
        path: /opt/hostedtoolcache/Python/${{ inputs.python-version }}/x64/
        key: python${{ inputs.python-version }}-${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
    - name: Install Dependencies
      if: |
        inputs.clean-run == false
      env:
        PYPI_USER: ${{ inputs.pypi-user }}
        PYPI_PASSWORD: ${{ inputs.pypi-password }}
      shell: bash
      run: |
        pip install poetry
        poetry config virtualenvs.create false
        poetry config http-basic.zapay-pypi $PYPI_USER $PYPI_PASSWORD
        if [ "${{ inputs.all_extras }}" = "true" ]; then
          poetry install --all-extras --no-interaction --no-ansi -vvv
        else
          poetry install --no-interaction --no-ansi -vvv
        fi
    - name: Tests
      if: |
        inputs.clean-run == false
      env:
        DOPPLER_TOKEN: ${{ inputs.doppler-token-tests }}
      shell: bash
      run: |
        echo Installing Doppler
        sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
        curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main" | sudo tee /etc/apt/sources.list.d/doppler-cli.list
        sudo apt-get update && sudo apt-get install doppler
        echo Doppler Installed
        echo Running Tests
        doppler run -- pytest src --cov --cov-report xml:coverage.xml
    - name: Upload coverage to the next step
      if: |
        inputs.clean-run == false
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ github.run_id }}
        path: coverage.xml
    - uses: zapay-pagamentos/zpy-platform-k8s-sonar-action@v2
        name: sonarsource
        with:
          sonar-token: ${{inputs.sonar-token}}
          sonar-url: ${{ inputs.sonar-url }}
          org-github-token: ${{ inputs.org-github-token }}
          strict: ${{ inputs.strict }}
