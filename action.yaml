name: 'Execute tests'
description: 'Execute tests on python'
inputs:
  doppler-token-tests:
    description: 'Doppler token for tests'
    required: true
  python-version:
    description: 'Python version'
    required: true
  pypi-user:
    description: 'PyPi user'
    required: true
  pypi-password:
    description: 'PyPi password'
    required: true
  all_extras:
    description: 'Install All Extras'
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: Install host dependencies
      shell: bash
      run: sudo apt update && sudo apt-get install -y locales locales-all libcurl4-openssl-dev libssl-dev
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: /opt/hostedtoolcache/Python/${{ inputs.python-version }}/x64/
        key: python${{ inputs.python-version }}-${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
    - name: Install Dependencies
      env:
        PYPI_USER: ${{ inputs.pypi-user }}
        PYPI_PASSWORD: ${{ inputs.pypi-password }}
      shell: bash
      run: |
        pip install poetry
        poetry config virtualenvs.create false
        poetry config http-basic.zapay-pypi $PYPI_USER $PYPI_PASSWORD
        if [ "${{ inputs.all_extras }}" = "true" ]; then
          poetry install --all-extras --no-interaction --no-ansi -vvv
        else
          poetry install --no-interaction --no-ansi -vvv
        fi
    - name: Tests
      env:
        DOPPLER_TOKEN: ${{ inputs.doppler-token-tests }}
      shell: bash
      run: |
        echo Installing Doppler
        (curl -Ls https://cli.doppler.com/install.sh || wget -qO- https://cli.doppler.com/install.sh --debug) | sudo bash
        echo Doppler Installed
        echo Running Tests
        doppler run -- pytest src --cov --cov-report xml:coverage.xml
    - name: Upload coverage to the next step
      uses: actions/upload-artifact@v3
      with:
        name: coverage-${{ github.run_id }}
        path: coverage.xml
